[project]
name = "pfs_target_uploader"
dynamic = ["version"]
description = "Target uploader for PFS openuse"
authors = [{ name = "Masato Onodera", email = "monodera@naoj.org" }]
dependencies = [
    "panel<1.7,>=1.6.0",
    "numpy>=2.0",
    "astropy>=5.3.1",
    "astroplan>=0.9",
    "colorcet>=3.0.1",
    "datashader>=0.16.0",
    "dask>=2023.10.1",
    "fontawesome-markdown @ https://github.com/bmcorser/fontawesome-markdown/archive/master.zip",
    "gurobipy>=10,<11",
    "holoviews>=1.17.1",
    "hvplot>=0.8.4",
    "loguru>=0.7.2",
    "markdown-it-py>=3.0.0",
    "mkdocs-macros-plugin>=0.7.0",
    # "mkdocs-material[imaging]>=9.5.4",
    "mkdocs-material>=9.5.4",
    "mkdocs-video>=1.5.0",
    "mkdocs>=1.4.3",
    "multiprocess>=0.70.15",
    "myst-parser>=2.0.0",
    "pandas>=2.0.3",
    "python-dotenv>=1.0.0",
    "scikit-learn>=1.3.0",
    "seaborn>=0.12.2",
    "spatialpandas>=0.4.9",
    "typer>=0.12.3",
    "pip>=23.2.1",
    "pybind11>=2.11.1",
    "setuptools>=68.2.2",
    "wheel>=0.41.2",
    "qplan @ git+https://github.com/naojsoft/qplan.git",
    "ets-fiber-assigner @ git+https://github.com/Subaru-PFS/ets_fiberalloc.git",
    "ics-cobraOps @ git+https://github.com/Subaru-PFS/ics_cobraOps.git",
    "pfs-utils @ git+https://github.com/Subaru-PFS/pfs_utils.git",
    "psutil>=6.0.0",
    "hdbscan>=0.8.40",
    "skyfield>=1.53",
    "astropy-healpix>=1.1.2",
]
requires-python = ">=3.11,<3.13"
readme = "README.md"
license = { text = "MIT" }

[project.scripts]
pfs-uploader-cli = "pfs_target_uploader.cli.cli_main:app"

[build-system]
requires = ["setuptools", "wheel", "pybind11"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "pfs_target_uploader.__version__" }

[tool.pdm.dev-dependencies]
dev = [
    "-e git+https://github.com/Subaru-PFS/ics_cobraCharmer.git#egg=ics-cobraCharmer",
    "black>=23.7.0",
    "ruff",
    "flake8>=6.1.0",
    "ipython>=8.14.0",
]
profilers = ["pyinstrument>=4.6.0", "snakeviz>=2.2.0", "memray>=1.10.0"]

[tool.pdm.scripts]
serve-app = { cmd = [
    "pdm",
    "run",
    "pfs-uploader-cli",
    "start-app",
    "uploader",
    "--port",
    "5008",
    "--allow-websocket-origin",
    "localhost:5008",
    "--allow-websocket-origin",
    "localhost:8080",
    "--prefix=uploader/",
    "--static-dirs",
    "doc=docs/site",
    "--static-dirs",
    "data=data",
    "--max-upload-size=500",
    "--autoreload",
], help = "Start the dev server for app and admin pages" }
serve-app-admin = { cmd = [
    "pdm",
    "run",
    "pfs-uploader-cli",
    "start-app",
    "admin",
    "--port",
    "5009",
    "--allow-websocket-origin",
    "localhost:5009",
    "--prefix=uploader-admin/",
    "--static-dirs",
    "doc=docs/site",
    "--static-dirs",
    "data=data",
    "--max-upload-size=100",
    "--autoreload",
], help = "Start the dev server for app and admin pages" }
serve-doc = { shell = "cd docs && mkdocs serve", help = "Start the dev server for doc preview" }
build-doc = { shell = "cd docs && mkdocs build", help = "Build documentation" }
gen-requirements = { cmd = [
    "pdm",
    "export",
    "--format",
    "requirements",
    "--without-hashes",
    "--pyproject",
    "--dev",
    "--output",
    "requirements.txt",
    "--verbose",
], help = "Generate requirements.txt" }


# [tool.pdm.options]
# add = ["--no-isolation"]
# install = ["--no-isolation"]

[tool.ruff]
target-version = "py39"
line-length = 88
# line-length = 128

[tool.ruff.lint]
ignore = [
    "F401", # module imported but unused
    "F841", # local variable is assigned to but never used
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]
# select = [
#     "E",  # pycodestyle errors
#     "W",  # pycodestyle warnings
#     "F",  # pyflakes
#     "I",  # isort
#     "B",  # flake8-bugbear
#     "C4", # flake8-comprehensions
#     "UP", # pyupgrade
# ]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

# [tool.pdm.options]
# add = ["--no-isolation", "--no-self"]
# install = ["--no-isolation", "--no-self"]
# add = ["--no-isolation"]
# install = ["--no-isolation"]
# lock = ["--no-cross-platform"]

# [tool.black]
# line-length = 120
# target-version = ["py39", "py310", "py311"]
# target-version = ["py311"]
